{
    "version": 1,
    // 时间间隔，用于检查和推送
    // 有效格式: 1m 1h 1d
    // 默认: 1m
    // 小于 1m 的值将被忽略
    "interval": "1m",
    // 监测规则
    // 可用类型(type): cpu, mem, net, disk, temp (温度), swap
    //
    // 阈值(Threshold)
    // 格式: 比较符号 值 单位
    // 比较符号: >, >=, <, <=, =
    // 值: int/float: 0.1 1 1.1
    // 单位: % (百分比), m/s (速度), m (大小), c (摄氏度)
    // 速度仅支持以秒为单位: b/s k/s, m/s, g/s ...
    // 
    // 匹配器:
    // cpu: cpu, cpu0, 1, 2, 3, ...
    // mem: free, used, avail
    // net: eth0, eth1-in, docker-out, ...
    // disk: /, /home, /dev/sda1, ...
    // temp: x86_pkg_temp, x86_core_temp, ...
    // swap: free, used
    "rules": [
        {
            "type": "cpu",
            "threshold": ">=77.7%",
            // "" / "cpu" -> 所有CPU, 这种情况下, 你可以省略该规则的 "matcher" 属性
            // "X" / "cpuX" -> 第X个CPU
            "matcher": "0"
        },
        {
            "type": "net",
            // 速度仅支持以秒为单位
            "threshold": ">=7.7m/s",
            // 网络接口名
            "matcher": "eth0"
        },
        {
            "type": "temp",
            // 温度仅支持摄氏度
            "threshold": ">=37.7c",
            // 你可以运行 `cat /sys/class/thermal/thermal_zone*/type` 来获取所有的温度类型
            "matcher": "x86_pkg_temp"
        },
        {
            "type": "disk",
            "threshold": ">=77.7%",
            // 挂载点或文件系统
            // 你可以使用 `df -h` 来获取所有有效的匹配器
            "matcher": "/dev/sda1"
        },
        {
            "type": "mem",
            // 支持: 大小, 百分比
            "threshold": "<=17.7%",
            // 支持: free, used, avail
            "matcher": "free"
        },
        {
            "type": "swap",
            // 支持: 大小, 百分比
            "threshold": ">=37.7%",
            // 支持: free, used
            "matcher": "used"
        }
    ],
    // 推送规则
    // 类型 type: webhook, ios, server酱 (以后有更多)
    // 接口 iface: 推送类型的接口
    // body成功正则 body_regex: 正则表达式匹配响应体
    // 成功code code: 响应码匹配
    "pushes": [
        {
            // 这是一个推送到QQ群的例子
            "type": "webhook",
            "iface": {
                "name": "QQ Group",
                // web钩子链接
                "url": "http://localhost:5700",
                // 请求头
                "headers": {
                    "Authorization": "Bearer YOUR_TOKEN",
                    "Content-Type": "application/json"
                },
                // 大写的HTTP方法
                "method": "POST",
                // 请求体
                // {{key}} 和 {{value}} 将被替换为监测结果的key和value
                "body": {
                    "action": "send_group_msg",
                    "params": {
                        "group_id": 123456789,
                        "message": "ServerBox Notification\n{{key}}: {{value}}"
                    }
                }
            },
            // 推送校验：
            // 如果 regex 和 code 未空，将不会检查响应体和响应码
            //
            // 如果响应体匹配，推送将被认为成功
            "body_regex": ".*",
            // 如果响应码匹配，推送将被认为成功
            "code": 200
        },
        {
            "type": "ios",
            "iface": {
                "name": "ServerBox iOS App",
                // 你可以从 ServerBox iOS app 的 设置 中获取 token
                "token": "YOUR_TOKEN",
                "title": "Server Notification",
                "content": "{{key}}: {{value}}"
            },
            "body_regex": ".*",
            "code": 200
        },
        {
            "type": "server_chan",
            "iface": {
                "name": "Server酱",
                // 具体配置请参考 https://sct.ftqq.com/
                "sckey": "YOUR_SCKEY",
                "title": "Server Notification",
                "desp": "{{key}}: {{value}}"
            },
            "body_regex": ".*",
            "code": 200
        }
    ]
}